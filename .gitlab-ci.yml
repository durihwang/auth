variables:
  DEVELOP: "dev"
  STAGING: "stage"
  PRODUCTION: "prod"
  # variables related to k8s cluster
  KUBE_CONFIG: ${CI_PROJECT_DIR}/.helm/kubeconfig
  KUBE_CLUSTER_PROD: "interk8s"
  KUBE_CLUSTER_STAG: "interk8s-stag"
  KUBE_CLUSTER_DEV: "interk8s-dev"
  KUBE_NAMESPACE: "gabia-com"
  # variables related to helm
  HELM_CHART_DEFAULT_NAME: "auth-api"
  GIT_SUBMODULE_STRATEGY: recursive

stages:
  - build
  - pages
  - package
  - deploy

# default configuration of build to gradle
.gradle-build:
  image: repo.gabia.com/gabia/base/openjdk:13-alpine
  stage: build
  script:
    - ./gradlew clean build
  artifacts:
    when: on_success
    expire_in: 30 days
    paths:
      - build/libs/*.jar
      - build/reports

# default configuration of build to docker
.docker-build:
  image:
    name: repo.gabia.com/gabia/base/kaniko-executor:debug
    entrypoint: [""]
  stage: package
  variables:
    DOCKER_TLS_CERTDIR: ""
    IMAGE_REPOSITORY: "repo.gabia.com/gabia/com/auth"
  script:
    # - |
    #   /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile \
    #                    --build-arg BUILD_TYPE=${BUILD_TYPE} \
    #                    --build-arg GKMS_URL=${GKMS_URL} \
    #                    --build-arg GKMS_ROLE_ID=${GKMS_ROLE_ID} \
    #                    --build-arg GKMS_SECRET_ID=${GKMS_SECRET_ID} \
    #                    --build-arg GKMS_ENGINE_NAME=${GKMS_ENGINE_NAME} \
    #                    --destination ${IMAGE_REPOSITORY}:${IMAGE_TAG}
    - |
      /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile \
                       --build-arg BUILD_TYPE=${BUILD_TYPE} \
                       --destination ${IMAGE_REPOSITORY}:${IMAGE_TAG}

# default configuration of deploy
.deploy:
  image: repo.gabia.com/gabia/base/helm-kubectl
  stage: deploy
  script:
    - |
      helm upgrade -i ${HELM_CHART_NAME} ${CI_PROJECT_DIR}/.helm \
          --kubeconfig ${KUBE_CONFIG} \
          --kube-context ${CLUSTER_TYPE} \
          --namespace ${KUBE_NAMESPACE} \
          --values ${CI_PROJECT_DIR}/.helm/values-${BUILD_TYPE}.yaml \
          --set ingress.hosts="{${HOST_URL}}" \
          --set image.tag=${IMAGE_TAG} \
          --set loadBalancer.ips={${LB_IP}} \
          --atomic \
          --timeout 5m
    - |
      helm list \
          --kubeconfig ${KUBE_CONFIG} \
          --kube-context ${CLUSTER_TYPE} \
          --namespace ${KUBE_NAMESPACE}
  environment:
    name: ${CI_COMMIT_REF_NAME}

# default configuration of uninstall to helm chart
.helm-uninstall:
  image: repo.gabia.com/gabia/base/helm-kubectl
  stage: deploy
  script:
    - |
      helm uninstall ${HELM_CHART_NAME} \
          --kubeconfig ${KUBE_CONFIG} \
          --kube-context ${CLUSTER_TYPE} \
          --namespace ${KUBE_NAMESPACE}
    - |
      helm list \
          --kubeconfig ${KUBE_CONFIG} \
          --kube-context ${CLUSTER_TYPE} \
          --namespace ${KUBE_NAMESPACE}
  environment:
    name: ${CI_COMMIT_REF_NAME}
    action: stop

include:
  - local: .gitlab/ci/feature.gitlab-ci.yml
  - local: .gitlab/ci/develop.gitlab-ci.yml
  - local: .gitlab/ci/staging.gitlab-ci.yml
  - local: .gitlab/ci/production.gitlab-ci.yml
